1、标识符（即变量）：
	1.1、只能包含大小写字母数字和下划线，并且只能以字母或下划线开头，默认情况下下划线开头的变量为lua默认全局变量
	1.2、定义变量时默认全局变量，使用local将其变为局部变量，
		局部变量只能在对应的代码块中使用；只要没有local修饰，不论变量在哪里定义都是全局变量
	1.3、nil关键字表示变量从未使用过，将已知变量赋值为为nil即可删除该变量，在条件表达式中等同false
	1.4、赋值时可以同时赋多个，a,b,c="2",1,4
		变量多于值，用nil补充，变量小于值，自动舍弃多余值
2、注释：
	--注释单行
	--[[]]注释多行
3、数据类型：
	nil			这个最简单，只有值nil属于该类，表示一个无效值（在条件表达式中相当于false）。
	boolean		包含两个值：false和true。
	number		表示双精度类型的实浮点数
	string		字符串由一对双引号或单引号来表示
	function	由 C 或 Lua 编写的函数
	userdata	表示任意存储在变量中的C数据结构
	thread		表示执行的独立线路，用于执行协同程序
	table		Lua 中的表（table）其实是一个"关联数组"（associative arrays），
				数组的索引可以是数字、字符串或表类型。在 Lua 里，table 的创建是通过"构造表达式"来完成，
				最简单构造表达式是{}，用来创建一个空表。
4、内置function：
	print屏幕输出
	type判断数据类型
	pairs将table内容转化成key,value数组
	ipairs同pairs功能一样，不过不转化key的number型的数据
	select读取函数参数中的具体值	获取参数个数select(#,...)，	获取第n个参数select(n,...)
5、字符串操作：
	..将分裂的字符串连接成一个整串
	+-*/为四则运算，对字符串也有效，/为有效除法，非取整除法，//为向下取整除法
	#str可以输出对应字符串str的长度
	[[]]在括号内可以任意输入长串字符串
	\为转移符
6、table操作：
	{}为空表，{key="e33"}为初始化有内容的table，等号左边为一个变量，必须满足变量要求，默认为字符串类型
	可以使用[]为新增key或者为已存在key赋值，也可以使用.代替但是.只针对key为字符串时有效
7、函数操作
	函数作为第一类型，可以直接将其视为特殊变量，可以作为参数传递
8、元表操作
	Lua 查找一个表元素时的规则，其实就是如下 3 个步骤:
		1.在表中查找，如果找到，返回该元素，找不到则继续
		2.判断该表是否有元表，如果没有元表，返回 nil，有元表则继续。
		3.判断元表有没有 __index 方法，如果 __index 方法为 nil，则返回 nil；
			如果 __index 方法是一个表，则重复 1、2、3；
			如果 __index 方法是一个函数，则返回该函数的返回值。